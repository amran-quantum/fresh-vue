{"remainingRequest":"/home/amran/test-projects/vue/vue-record/node_modules/babel-loader/lib/index.js!/home/amran/test-projects/vue/vue-record/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amran/test-projects/vue/vue-record/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amran/test-projects/vue/vue-record/src/App.vue","mtime":1623929936000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/amran/test-projects/vue/vue-record/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar axios = require(\"axios\");\n\nexport default {\n  name: 'app',\n  data: function data() {\n    return {\n      seeAll: false,\n      videoExist: false,\n      admin: false,\n      videoExist2: false,\n      loginModal: false,\n      formdata: {\n        email: \"\",\n        password: \"\"\n      },\n      file: '',\n      recordMode: {\n        video: 'press'\n      },\n      recordings: [],\n      crfObj: {\n        \"X-CSRF-TOKEN\": document.querySelector('meta[name=\"csrf-token\"]')\n      },\n      headers: {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    };\n  },\n  methods: {\n    onVideoStream: function onVideoStream(stream) {\n      console.log('Got a video stream object:', stream);\n      this.$refs.Video.srcObject = stream;\n      this.$refs.Video.play();\n    },\n    submitFile: function () {\n      var _submitFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formData, fd;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('fileup', this.file);\n                _context.next = 4;\n                return axios.post('https://video-backend-amran.herokuapp.com/api/single-file', formData, {\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  }\n                });\n\n              case 4:\n                fd = _context.sent;\n\n                if (fd.data) {\n                  alert(\"Video uploaded successfully\");\n                } else {\n                  alert(\"Video upload failed\");\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitFile() {\n        return _submitFile.apply(this, arguments);\n      }\n\n      return submitFile;\n    }(),\n    handleImageUpload: function () {\n      var _handleImageUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(res) {\n        var up;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!res) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return axios.post(\"https://video-backend-amran.herokuapp.com/api/single-file-store\", {\n                  data: \"https://video-backend-amran.herokuapp.com\" + res\n                }, this.headers);\n\n              case 3:\n                up = _context2.sent;\n\n                if (up.status == 200) {\n                  console.log(\"success\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleImageUpload(_x) {\n        return _handleImageUpload.apply(this, arguments);\n      }\n\n      return handleImageUpload;\n    }(),\n    onVideoResult: function onVideoResult(data) {\n      this.$refs.Video.srcObject = null;\n      this.$refs.Video.src = window.URL.createObjectURL(data);\n      this.videoExist = true;\n    },\n    uploadTheVideo: function uploadTheVideo() {\n      var url = this.$refs.Video.src;\n      var a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url; // the filename you want\n\n      var y = url.split(\"blob:https://video-frontend-amran.herokuapp.com/\")[1];\n      a.download = y + '.mp4';\n      document.body.appendChild(a);\n      a.click();\n      this.videoExist2 = true;\n    },\n    attemptToLogin: function () {\n      var _attemptToLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var login;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.formdata.email == \"\")) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", alert(\"Enter Email\"));\n\n              case 2:\n                if (!(this.formdata.password == \"\")) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", alert(\"Enter Password\"));\n\n              case 4:\n                _context3.next = 6;\n                return axios.post(\"https://video-backend-amran.herokuapp.com/api/login\", this.formdata, this.headers);\n\n              case 6:\n                login = _context3.sent;\n\n                if (login.status == 200) {\n                  if (login.data.msg === \"success\") {\n                    localStorage.setItem(\"loggedin\", \"yes\");\n                    location.reload();\n                  } else {\n                    localStorage.setItem(\"loggedin\", \"no\");\n                    alert(\"Login failed\");\n                  }\n                }\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function attemptToLogin() {\n        return _attemptToLogin.apply(this, arguments);\n      }\n\n      return attemptToLogin;\n    }(),\n    seeAllVideos: function () {\n      var _seeAllVideos = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.seeAll = true;\n                _context4.next = 3;\n                return axios.get(\"https://video-backend-amran.herokuapp.com/api/get-all-video\", this.headers);\n\n              case 3:\n                res = _context4.sent;\n\n                if (res.status == 200) {\n                  if (res.data.msg === \"success\") {\n                    this.recordings = res.data.video;\n                  } else {\n                    alert(res.data.msg);\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function seeAllVideos() {\n        return _seeAllVideos.apply(this, arguments);\n      }\n\n      return seeAllVideos;\n    }(),\n    logout: function logout() {\n      localStorage.setItem(\"loggedin\", \"no\");\n      location.reload();\n    }\n  },\n  created: function created() {\n    this.admin = localStorage.getItem(\"loggedin\") === \"yes\" ? true : false;\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div v-if=\"admin==false\">\r\n        <span @click=\"loginModal=true\"> <button class=\"btn btn-success\">Admin Login</button></span>\r\n      </div>\r\n      <div v-if=\"admin==false\">\r\n        <div v-if=\"loginModal==true\">\r\n          <input  v-model=\"formdata.email\" type=\"email\" placeholder=\"email\" >\r\n          <input  v-model=\"formdata.password\" type=\"password\" placeholder=\"password\" >\r\n          <button @click=\"attemptToLogin\" class=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"admin==true\">\r\n        <span @click=\"logout\"> <button class=\"btn btn-danger\">Logout</button></span>\r\n      </div>\r\n    </nav>\r\n    \r\n    <header class=\"header\">\r\n      <div class=\"navbar-brand\">\r\n        <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n      </div>\r\n\r\n      <div class=\"navbar-brand-name\">\r\n        <h1 class=\"title\">Video Recording Task</h1>\r\n        <h2 class=\"subtitle\">\r\n          Human Capital Group, WLL Doha, Qatar\r\n        </h2>\r\n        <h3>Author: MD Amran,\r\n          Software Developer,\r\n          YO Tech Limited\r\n        </h3>\r\n      </div>\r\n    </header>\r\n\r\n    <main class=\"container has-text-centered\">\r\n      <section id=\"example-video\">\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <div class=\"has-text-right\">\r\n              <h3 class=\"title is-3\">Recording video files</h3>\r\n              <p class=\"subtitle\">Simply <strong>{{recordMode.video}}</strong> the button to record a video clip</p>\r\n            </div>\r\n\r\n            <div class=\"record-settings\">\r\n              <vue-record-video mode=\"press\" @stream=\"onVideoStream\" @result=\"onVideoResult\" />\r\n              <!-- <div class=\"field\">\r\n                <label class=\"label\">Mode</label>\r\n                <div class=\"select\">\r\n                  <select v-model=\"recordMode.video\">\r\n                    <option value=\"press\">Press</option>\r\n                    <option value=\"hold\">Hold</option>\r\n                  </select>\r\n                </div>\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div class=\"recorded-video\">\r\n              <video muted ref=\"Video\" width=\"400\" height=\"250\" controls></video>\r\n            </div>\r\n            <div v-if=\"videoExist\">\r\n              <span ref=\"file\" @click=\"uploadTheVideo\">Download</span>\r\n              <div v-if=\"videoExist2\">\r\n                <Upload\r\n                ref=\"upload\"\r\n               :headers=\"crfObj\"\r\n                :on-success=\"handleImageUpload\"\r\n                 name=\"fileup\" action=\"https://video-backend-amran.herokuapp.com/api/single-file\">\r\n                  <Button icon=\"ios-cloud-upload-outline\">Upload file</Button>\r\n                </Upload>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n    <main v-if=\"admin==true\" class=\"container has-text-centered\">\r\n      <button @click=\"seeAllVideos\" class=\"btn btn-danger\">See All Video</button>\r\n      <table v-if=\"seeAll==true\" class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">ID</th>\r\n      <th scope=\"col\">User Info</th>\r\n      <th scope=\"col\">Video</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr v-for=\"item in recordings\" :key=\"index\">\r\n      <th scope=\"row\" >{{item.id}}</th>\r\n      <td>{{item.user_info}}</td>\r\n      <td>\r\n        <video :src=\"item.data\" width=\"400\" height=\"250\" controls></video>\r\n      </td>\r\n\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n    </main>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require(\"axios\");\r\nexport default {\r\n  name: 'app',\r\n  data () {\r\n    return {\r\n      seeAll:false,\r\n      videoExist: false,\r\n      admin: false,\r\n      videoExist2: false,\r\n      loginModal: false,\r\n      formdata: {\r\n        email:\"\",\r\n        password:\"\"\r\n      },\r\n       file: '',\r\n      recordMode: {\r\n        video: 'press'\r\n      },\r\n      recordings: [],\r\n      crfObj: {\r\n        \"X-CSRF-TOKEN\": document\r\n          .querySelector('meta[name=\"csrf-token\"]')\r\n      },\r\n      headers: {headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }}\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    onVideoStream (stream) {\r\n      console.log('Got a video stream object:', stream);\r\n      this.$refs.Video.srcObject = stream;\r\n      this.$refs.Video.play();\r\n    },\r\n\r\n    async submitFile(){\r\n          let formData = new FormData();\r\n          formData.append('fileup', this.file);\r\n          let fd = await axios.post('https://video-backend-amran.herokuapp.com/api/single-file',\r\n              formData,\r\n              {\r\n              headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n              }\r\n            }\r\n          );\r\n          if(fd.data){\r\n            alert(\"Video uploaded successfully\")\r\n          }else{\r\n            alert(\"Video upload failed\")\r\n          }\r\n          \r\n      \r\n    },\r\n\r\n\r\n    async handleImageUpload(res) {\r\n\t\t\tif (res) {\r\n\t\t\t\tlet up = await axios.post(\"https://video-backend-amran.herokuapp.com/api/single-file-store\",{data:\"https://video-backend-amran.herokuapp.com\"+res}, this.headers);\r\n        if(up.status == 200){\r\n          console.log(\"success\")\r\n        }\r\n\r\n\t\t\t}\r\n\t\t\r\n\t\t},\r\n\r\n    onVideoResult (data) {\r\n      this.$refs.Video.srcObject = null\r\n      this.$refs.Video.src = window.URL.createObjectURL(data)\r\n      this.videoExist = true\r\n    },\r\n    uploadTheVideo(){\r\n      const url = this.$refs.Video.src;\r\n    const a = document.createElement('a');\r\n    a.style.display = 'none';\r\n    a.href = url;\r\n    // the filename you want\r\n    let y = url.split(\"blob:https://video-frontend-amran.herokuapp.com/\")[1];\r\n    a.download = y+'.mp4';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n      this.videoExist2 = true\r\n    },\r\n    async attemptToLogin(){\r\n      if(this.formdata.email == \"\"){\r\n        return alert(\"Enter Email\")\r\n      }\r\n      if(this.formdata.password == \"\"){\r\n        return alert(\"Enter Password\")\r\n      }\r\n      let login = await axios.post(\"https://video-backend-amran.herokuapp.com/api/login\", this.formdata,this.headers );\r\n      if(login.status == 200){\r\n        if(login.data.msg === \"success\"){\r\n          localStorage.setItem(\"loggedin\", \"yes\");\r\n          location.reload();\r\n        }else{\r\n          localStorage.setItem(\"loggedin\", \"no\");\r\n          alert(\"Login failed\")\r\n        }\r\n      }\r\n    },\r\n    async seeAllVideos(){\r\n      this.seeAll = true\r\n      let res = await axios.get(\"https://video-backend-amran.herokuapp.com/api/get-all-video\",this.headers);\r\n      if(res.status == 200){\r\n        if(res.data.msg === \"success\"){\r\n          this.recordings = res.data.video\r\n        }else{\r\n          alert(res.data.msg)\r\n        }\r\n      }\r\n    },\r\n    logout(){\r\n      localStorage.setItem(\"loggedin\", \"no\");\r\n      location.reload();\r\n    }\r\n    \r\n  },\r\n  created(){\r\n    this.admin = localStorage.getItem(\"loggedin\") === \"yes\" ? true : false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nhtml, body, #app {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  main{\r\n    height: 100%;\r\n  }\r\n\r\n  strong, a {\r\n    color: #41b883 !important;\r\n  }\r\n\r\n  section {\r\n    margin: 40px 0;\r\n  }\r\n}\r\n\r\n.header {\r\n  padding: 20px 10px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .navbar-brand img {\r\n    height: 64px;\r\n    margin-right: 20px;\r\n    width: 64px;\r\n  }\r\n}\r\n\r\n.vue-audio-recorder, .vue-video-recorder {\r\n  margin-right: 16px;\r\n}\r\n\r\n.record-settings {\r\n  margin-top: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.recorded-audio {\r\n  margin: 0 auto;\r\n  height: 200px;\r\n  overflow: auto;\r\n  border: thin solid #eee;\r\n  background-color: #f7f7f7;\r\n  padding: 10px 5px;\r\n  .recorded-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 16px;\r\n  }\r\n  .audio-container {\r\n    display: flex;\r\n    height: 54px;\r\n    margin-right: 16px;\r\n  }\r\n}\r\n\r\n.recorded-video {\r\n  video {\r\n    width: 100%;\r\n    max-height: 400px;\r\n  }\r\n}\r\n\r\n.footer {\r\n  background-color: #eee;\r\n}\r\n</style>\r\n"],"sourceRoot":"src"}]}