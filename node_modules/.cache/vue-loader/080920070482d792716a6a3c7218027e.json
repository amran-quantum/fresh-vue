{"remainingRequest":"/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amran/test-projects/vue/vue-record/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/amran/test-projects/vue/vue-record/src/App.vue","mtime":1623929936000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nhtml, body, #app {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  main{\r\n    height: 100%;\r\n  }\r\n\r\n  strong, a {\r\n    color: #41b883 !important;\r\n  }\r\n\r\n  section {\r\n    margin: 40px 0;\r\n  }\r\n}\r\n\r\n.header {\r\n  padding: 20px 10px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .navbar-brand img {\r\n    height: 64px;\r\n    margin-right: 20px;\r\n    width: 64px;\r\n  }\r\n}\r\n\r\n.vue-audio-recorder, .vue-video-recorder {\r\n  margin-right: 16px;\r\n}\r\n\r\n.record-settings {\r\n  margin-top: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.recorded-audio {\r\n  margin: 0 auto;\r\n  height: 200px;\r\n  overflow: auto;\r\n  border: thin solid #eee;\r\n  background-color: #f7f7f7;\r\n  padding: 10px 5px;\r\n  .recorded-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 16px;\r\n  }\r\n  .audio-container {\r\n    display: flex;\r\n    height: 54px;\r\n    margin-right: 16px;\r\n  }\r\n}\r\n\r\n.recorded-video {\r\n  video {\r\n    width: 100%;\r\n    max-height: 400px;\r\n  }\r\n}\r\n\r\n.footer {\r\n  background-color: #eee;\r\n}\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div v-if=\"admin==false\">\r\n        <span @click=\"loginModal=true\"> <button class=\"btn btn-success\">Admin Login</button></span>\r\n      </div>\r\n      <div v-if=\"admin==false\">\r\n        <div v-if=\"loginModal==true\">\r\n          <input  v-model=\"formdata.email\" type=\"email\" placeholder=\"email\" >\r\n          <input  v-model=\"formdata.password\" type=\"password\" placeholder=\"password\" >\r\n          <button @click=\"attemptToLogin\" class=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"admin==true\">\r\n        <span @click=\"logout\"> <button class=\"btn btn-danger\">Logout</button></span>\r\n      </div>\r\n    </nav>\r\n    \r\n    <header class=\"header\">\r\n      <div class=\"navbar-brand\">\r\n        <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n      </div>\r\n\r\n      <div class=\"navbar-brand-name\">\r\n        <h1 class=\"title\">Video Recording Task</h1>\r\n        <h2 class=\"subtitle\">\r\n          Human Capital Group, WLL Doha, Qatar\r\n        </h2>\r\n        <h3>Author: MD Amran,\r\n          Software Developer,\r\n          YO Tech Limited\r\n        </h3>\r\n      </div>\r\n    </header>\r\n\r\n    <main class=\"container has-text-centered\">\r\n      <section id=\"example-video\">\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <div class=\"has-text-right\">\r\n              <h3 class=\"title is-3\">Recording video files</h3>\r\n              <p class=\"subtitle\">Simply <strong>{{recordMode.video}}</strong> the button to record a video clip</p>\r\n            </div>\r\n\r\n            <div class=\"record-settings\">\r\n              <vue-record-video mode=\"press\" @stream=\"onVideoStream\" @result=\"onVideoResult\" />\r\n              <!-- <div class=\"field\">\r\n                <label class=\"label\">Mode</label>\r\n                <div class=\"select\">\r\n                  <select v-model=\"recordMode.video\">\r\n                    <option value=\"press\">Press</option>\r\n                    <option value=\"hold\">Hold</option>\r\n                  </select>\r\n                </div>\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div class=\"recorded-video\">\r\n              <video muted ref=\"Video\" width=\"400\" height=\"250\" controls></video>\r\n            </div>\r\n            <div v-if=\"videoExist\">\r\n              <span ref=\"file\" @click=\"uploadTheVideo\">Download</span>\r\n              <div v-if=\"videoExist2\">\r\n                <Upload\r\n                ref=\"upload\"\r\n               :headers=\"crfObj\"\r\n                :on-success=\"handleImageUpload\"\r\n                 name=\"fileup\" action=\"https://video-backend-amran.herokuapp.com/api/single-file\">\r\n                  <Button icon=\"ios-cloud-upload-outline\">Upload file</Button>\r\n                </Upload>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n    <main v-if=\"admin==true\" class=\"container has-text-centered\">\r\n      <button @click=\"seeAllVideos\" class=\"btn btn-danger\">See All Video</button>\r\n      <table v-if=\"seeAll==true\" class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">ID</th>\r\n      <th scope=\"col\">User Info</th>\r\n      <th scope=\"col\">Video</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr v-for=\"item in recordings\" :key=\"index\">\r\n      <th scope=\"row\" >{{item.id}}</th>\r\n      <td>{{item.user_info}}</td>\r\n      <td>\r\n        <video :src=\"item.data\" width=\"400\" height=\"250\" controls></video>\r\n      </td>\r\n\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n    </main>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require(\"axios\");\r\nexport default {\r\n  name: 'app',\r\n  data () {\r\n    return {\r\n      seeAll:false,\r\n      videoExist: false,\r\n      admin: false,\r\n      videoExist2: false,\r\n      loginModal: false,\r\n      formdata: {\r\n        email:\"\",\r\n        password:\"\"\r\n      },\r\n       file: '',\r\n      recordMode: {\r\n        video: 'press'\r\n      },\r\n      recordings: [],\r\n      crfObj: {\r\n        \"X-CSRF-TOKEN\": document\r\n          .querySelector('meta[name=\"csrf-token\"]')\r\n      },\r\n      headers: {headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }}\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    onVideoStream (stream) {\r\n      console.log('Got a video stream object:', stream);\r\n      this.$refs.Video.srcObject = stream;\r\n      this.$refs.Video.play();\r\n    },\r\n\r\n    async submitFile(){\r\n          let formData = new FormData();\r\n          formData.append('fileup', this.file);\r\n          let fd = await axios.post('https://video-backend-amran.herokuapp.com/api/single-file',\r\n              formData,\r\n              {\r\n              headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n              }\r\n            }\r\n          );\r\n          if(fd.data){\r\n            alert(\"Video uploaded successfully\")\r\n          }else{\r\n            alert(\"Video upload failed\")\r\n          }\r\n          \r\n      \r\n    },\r\n\r\n\r\n    async handleImageUpload(res) {\r\n\t\t\tif (res) {\r\n\t\t\t\tlet up = await axios.post(\"https://video-backend-amran.herokuapp.com/api/single-file-store\",{data:\"https://video-backend-amran.herokuapp.com\"+res}, this.headers);\r\n        if(up.status == 200){\r\n          console.log(\"success\")\r\n        }\r\n\r\n\t\t\t}\r\n\t\t\r\n\t\t},\r\n\r\n    onVideoResult (data) {\r\n      this.$refs.Video.srcObject = null\r\n      this.$refs.Video.src = window.URL.createObjectURL(data)\r\n      this.videoExist = true\r\n    },\r\n    uploadTheVideo(){\r\n      const url = this.$refs.Video.src;\r\n    const a = document.createElement('a');\r\n    a.style.display = 'none';\r\n    a.href = url;\r\n    // the filename you want\r\n    let y = url.split(\"blob:https://video-frontend-amran.herokuapp.com/\")[1];\r\n    a.download = y+'.mp4';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n      this.videoExist2 = true\r\n    },\r\n    async attemptToLogin(){\r\n      if(this.formdata.email == \"\"){\r\n        return alert(\"Enter Email\")\r\n      }\r\n      if(this.formdata.password == \"\"){\r\n        return alert(\"Enter Password\")\r\n      }\r\n      let login = await axios.post(\"https://video-backend-amran.herokuapp.com/api/login\", this.formdata,this.headers );\r\n      if(login.status == 200){\r\n        if(login.data.msg === \"success\"){\r\n          localStorage.setItem(\"loggedin\", \"yes\");\r\n          location.reload();\r\n        }else{\r\n          localStorage.setItem(\"loggedin\", \"no\");\r\n          alert(\"Login failed\")\r\n        }\r\n      }\r\n    },\r\n    async seeAllVideos(){\r\n      this.seeAll = true\r\n      let res = await axios.get(\"https://video-backend-amran.herokuapp.com/api/get-all-video\",this.headers);\r\n      if(res.status == 200){\r\n        if(res.data.msg === \"success\"){\r\n          this.recordings = res.data.video\r\n        }else{\r\n          alert(res.data.msg)\r\n        }\r\n      }\r\n    },\r\n    logout(){\r\n      localStorage.setItem(\"loggedin\", \"no\");\r\n      location.reload();\r\n    }\r\n    \r\n  },\r\n  created(){\r\n    this.admin = localStorage.getItem(\"loggedin\") === \"yes\" ? true : false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nhtml, body, #app {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  main{\r\n    height: 100%;\r\n  }\r\n\r\n  strong, a {\r\n    color: #41b883 !important;\r\n  }\r\n\r\n  section {\r\n    margin: 40px 0;\r\n  }\r\n}\r\n\r\n.header {\r\n  padding: 20px 10px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .navbar-brand img {\r\n    height: 64px;\r\n    margin-right: 20px;\r\n    width: 64px;\r\n  }\r\n}\r\n\r\n.vue-audio-recorder, .vue-video-recorder {\r\n  margin-right: 16px;\r\n}\r\n\r\n.record-settings {\r\n  margin-top: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.recorded-audio {\r\n  margin: 0 auto;\r\n  height: 200px;\r\n  overflow: auto;\r\n  border: thin solid #eee;\r\n  background-color: #f7f7f7;\r\n  padding: 10px 5px;\r\n  .recorded-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 16px;\r\n  }\r\n  .audio-container {\r\n    display: flex;\r\n    height: 54px;\r\n    margin-right: 16px;\r\n  }\r\n}\r\n\r\n.recorded-video {\r\n  video {\r\n    width: 100%;\r\n    max-height: 400px;\r\n  }\r\n}\r\n\r\n.footer {\r\n  background-color: #eee;\r\n}\r\n</style>\r\n"]}]}