{"remainingRequest":"/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amran/test-projects/vue/vue-record/src/components/VueRecordVideo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amran/test-projects/vue/vue-record/src/components/VueRecordVideo.vue","mtime":1623892325000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amran/test-projects/vue/vue-record/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ElementMixin from './ElementMixin'\r\n\r\nconst supportedTypes = [\r\n  'video/x-matroska;codecs=avc1,opus',\r\n  'video/x-msvideo',\r\n  'video/ogg',\r\n  'video/mpeg',\r\n  'video/webm'\r\n]\r\n\r\nexport default {\r\n  name: 'VueRecordVideo',\r\n  mixins: [ElementMixin],\r\n  props: {\r\n    mimeType: {\r\n      type: String,\r\n      default: 'video/webm',\r\n      validator: v => supportedTypes.includes(v)\r\n    },\r\n    audio: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    mode: {\r\n      default: 'press'\r\n    }\r\n  },\r\n  computed: {\r\n    constraints () {\r\n      return {\r\n        video: true,\r\n        audio: this.audio\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["VueRecordVideo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueRecordVideo.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <div\r\n    v-if=\"isSupported\"\r\n    class=\"vue-video-recorder\"\r\n    :class=\"{\r\n      'active': isRecording,\r\n      'paused': isPaused\r\n    }\"\r\n    @mousedown=\"startRecording\"\r\n    @mouseleave=\"stopRecording\"\r\n    @mouseup=\"stopRecording\"\r\n    @touchstart=\"startRecording\"\r\n    @touchend=\"stopRecording\"\r\n    @touchcancel=\"stopRecording\"\r\n  >\r\n    <div class=\"recorder-icon\">\r\n      <span v-if=\"isRecording\">STOP</span>\r\n      <span v-else>START</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ElementMixin from './ElementMixin'\r\n\r\nconst supportedTypes = [\r\n  'video/x-matroska;codecs=avc1,opus',\r\n  'video/x-msvideo',\r\n  'video/ogg',\r\n  'video/mpeg',\r\n  'video/webm'\r\n]\r\n\r\nexport default {\r\n  name: 'VueRecordVideo',\r\n  mixins: [ElementMixin],\r\n  props: {\r\n    mimeType: {\r\n      type: String,\r\n      default: 'video/webm',\r\n      validator: v => supportedTypes.includes(v)\r\n    },\r\n    audio: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    mode: {\r\n      default: 'press'\r\n    }\r\n  },\r\n  computed: {\r\n    constraints () {\r\n      return {\r\n        video: true,\r\n        audio: this.audio\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.vue-video-recorder {\r\n  color: white;\r\n  border-radius: 18px;\r\n  position: relative;\r\n  display: flex;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n\r\n  .recorder-icon {\r\n    width: 64px;\r\n    height: 64px;\r\n    background-color: #4DB6AC;\r\n    border-radius: 50%;\r\n    display:inline-block;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    align-items: center;\r\n  }\r\n}\r\n</style>\r\n"]}]}